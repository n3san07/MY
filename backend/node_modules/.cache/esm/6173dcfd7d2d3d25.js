let express,cors,login,getLoginStatus,logout,signup,getCustomers,removeCustomer,addCustomer,editCustomer,getIsDeleted,Restore;_7d2‍.w("express",[["default",["express"],function(v){express=v}]]);_7d2‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_7d2‍.w("./sqlConnect");_7d2‍.w("./services/login",[["login",["login"],function(v){login=v}],["getLoginStatus",["getLoginStatus"],function(v){getLoginStatus=v}],["logout",["logout"],function(v){logout=v}]]);_7d2‍.w("./services/signup",[["signup",["signup"],function(v){signup=v}]]);_7d2‍.w("./services/customers",[["getCustomers",["getCustomers"],function(v){getCustomers=v}],["removeCustomer",["removeCustomer"],function(v){removeCustomer=v}],["addCustomer",["addCustomer"],function(v){addCustomer=v}],["editCustomer",["editCustomer"],function(v){editCustomer=v}],["getIsDeleted",["getIsDeleted"],function(v){getIsDeleted=v}],["Restore",["Restore"],function(v){Restore=v}]]);







const session = require('express-session');

const app = express();

app.use(session({
    secret: 'my-secret',
    name: 'mySession',
    resave: false,
    saveUninitialized: false,
}));

app.use(cors({
    origin: true,
    methods: 'GET,PUT,POST,DELETE,OPTIONS',
    credentials: true,
    allowedHeaders: 'Content-Type, Accept',
}));

app.use(express.json());

app.listen(3000, () => {
    console.log('listening on 3000');
});

app.get('/', (req, res) => {
    res.send("Hello World");
});

function authGurd(req, res, next) {
    if (req.session.user) {
        next();
    } else {
        res.sendStatus(401);
    }
}

app.post('/signup', signup);
app.post('/login', login);
app.get('/login', getLoginStatus);
app.get('/logout', logout);
app.get('/customers', authGurd, getCustomers);
app.delete('/DeletCustomer/:id', authGurd, removeCustomer);
app.post('/customer/add', authGurd, addCustomer);
app.post('/editCustomer/edit', authGurd, editCustomer);
app.get('/getIsDeleted', authGurd, getIsDeleted);
app.get('/Restore/:id', authGurd, Restore);
